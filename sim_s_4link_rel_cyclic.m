function [sys,x0,str,ts] = sim_s_4link_rel_cyclic(t,x,u,flag,dgain,pgain,desire,kk,side,ini)

format long;

switch flag,

  %%%%%%%%%%%%%%%%%%
  % Initialization %
  %%%%%%%%%%%%%%%%%%
  case 0,
    [sys,x0,str,ts]=mdlInitializeSizes(ini);

  %%%%%%%%%%%%%%%
  % Derivatives %
  %%%%%%%%%%%%%%%
  case 1,
    sys=mdlDerivatives(t,x,u,dgain,pgain,desire,kk,side,ini);

  %%%%%%%%%%%
  % Outputs %
  %%%%%%%%%%%
  case 3,
    sys=mdlOutputs(t,x,u,dgain,pgain,desire,kk,side,ini);

  %%%%%%%%%%%%%%%%%%%
  % Unhandled flags %
  %%%%%%%%%%%%%%%%%%%
  case { 2, 4, 9 },
    sys = [];

  %%%%%%%%%%%%%%%%%%%%
  % Unexpected flags %
  %%%%%%%%%%%%%%%%%%%%
  otherwise
    error(['Unhandled flag = ',num2str(flag)]);

end
% end csfunc

%
%=============================================================================
% mdlInitializeSizes
% Return the sizes, initial conditions, and sample times for the S-function.
%=============================================================================
%
function [sys,x0,str,ts]=mdlInitializeSizes(ini)

sizes = simsizes;
sizes.NumContStates  = 8;
sizes.NumDiscStates  = 0;
sizes.NumOutputs     = 15;
sizes.NumInputs      = 1;
sizes.DirFeedthrough = 0; %input x 0 ; input o 1 about output
sizes.NumSampleTimes = 1;

sys = simsizes(sizes);



% x0=[0 pi/2 0 0.01 0.00 0 0 0 0 0];
x0=ini; %test for 2017.01.16 inverse kinematics
%x0=[3/4*pi; -1/4*pi; 1/12*pi; -1/3*pi; 2;-3;8;8];
str = [];
ts  = [0  0];

% end mdlInitializeSizes
%
%=============================================================================
% mdlDerivatives
% Return the derivatives for the continuous states.
%=============================================================================
%
function sys=mdlDerivatives(t,x,u,dgain,pgain,desire,kk,side,ini)
%%four link calculation
Lc0=0.06; Lc1=0.07; Lc2=0.04; Lc3=0.04;
L0=0.12; L1=0.14; L2=0.08; L3=0.08;
m0=0.0425; m1=0.0111; m2=0.01955; m3=0.0119;
I0=5.1*10^(-5); I1=1.81*10^(-5); I2=1.19*10^(-5); I3=0.63*10^(-5);


g=9.8; 
%PID gain
c=dgain;k=pgain;
%%MODEL
q0=x(1);qr1=x(2);qr2=x(3);qr3=x(4);dq0=x(5);dqr1=x(6);dqr2=x(7);dqr3=x(8);


MR =[ (I0*m0 + I0*m1 + I0*m2 + I0*m3 + L0^2*m0*m2 + L0^2*m0*m3 + L0^2*m1*m2 + L0^2*m1*m3 + L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc0^2*m0*m1 + Lc0^2*m0*m2 + Lc1^2*m0*m1 + Lc0^2*m0*m3 + Lc1^2*m1*m2 + Lc2^2*m0*m2 + Lc1^2*m1*m3 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L0*Lc0*m0*m2 - 2*L0*Lc0*m0*m3 - 2*L2*Lc2*m2*m3 + 2*Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3) + 2*L0*Lc3*m0*m3*cos(qr2 + qr3) + 2*L0*Lc3*m1*m3*cos(qr2 + qr3) - 2*Lc0*Lc3*m0*m3*cos(qr2 + qr3) + 2*L0*L2*m0*m3*cos(qr2) + 2*L0*L2*m1*m3*cos(qr2) + 2*L0*Lc1*m1*m2*cos(qr1) + 2*L0*Lc1*m1*m3*cos(qr1) + 2*L0*Lc2*m0*m2*cos(qr2) + 2*L0*Lc2*m1*m2*cos(qr2) - 2*L2*Lc0*m0*m3*cos(qr2) + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) + 2*Lc0*Lc1*m0*m1*cos(qr1) - 2*Lc0*Lc2*m0*m2*cos(qr2) - 2*Lc2*Lc3*m2*m3*cos(qr3) + 2*L2*Lc1*m1*m3*cos(qr1 - qr2) + 2*Lc1*Lc2*m1*m2*cos(qr1 - qr2))/(m0 + m1 + m2 + m3), -(Lc1*m1*(Lc1*m0 + Lc1*m2 + Lc1*m3 + L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3) + L0*m2*cos(qr1) + L0*m3*cos(qr1) + Lc0*m0*cos(qr1)))/(m0 + m1 + m2 + m3), -(L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc2^2*m0*m2 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L2*Lc2*m2*m3 + Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3) + L0*Lc3*m0*m3*cos(qr2 + qr3) + L0*Lc3*m1*m3*cos(qr2 + qr3) - Lc0*Lc3*m0*m3*cos(qr2 + qr3) + L0*L2*m0*m3*cos(qr2) + L0*L2*m1*m3*cos(qr2) + L0*Lc2*m0*m2*cos(qr2) + L0*Lc2*m1*m2*cos(qr2) - L2*Lc0*m0*m3*cos(qr2) + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) - Lc0*Lc2*m0*m2*cos(qr2) - 2*Lc2*Lc3*m2*m3*cos(qr3) + L2*Lc1*m1*m3*cos(qr1 - qr2) + Lc1*Lc2*m1*m2*cos(qr1 - qr2))/(m0 + m1 + m2 + m3), -(Lc3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + Lc1*m1*cos(qr2 - qr1 + qr3) + L0*m0*cos(qr2 + qr3) + L0*m1*cos(qr2 + qr3) - Lc0*m0*cos(qr2 + qr3) + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3);
c1*m1*(Lc1*m0 + Lc1*m2 + Lc1*m3 + L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3) + L0*m2*cos(qr1) + L0*m3*cos(qr1) + Lc0*m0*cos(qr1)))/(m0 + m1 + m2 + m3),                                                                                             (I1*m0 + I1*m1 + I1*m2 + I1*m3 + Lc1^2*m0*m1 + Lc1^2*m1*m2 + Lc1^2*m1*m3)/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             (Lc1*m1*(L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                                                          (Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3))/(m0 + m1 + m2 + m3);
                                                                                                                                                                                                                                                                                                                 -(L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc2^2*m0*m2 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L2*Lc2*m2*m3 + Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3) + L0*Lc3*m0*m3*cos(qr2 + qr3) + L0*Lc3*m1*m3*cos(qr2 + qr3) - Lc0*Lc3*m0*m3*cos(qr2 + qr3) + L0*L2*m0*m3*cos(qr2) + L0*L2*m1*m3*cos(qr2) + L0*Lc2*m0*m2*cos(qr2) + L0*Lc2*m1*m2*cos(qr2) - L2*Lc0*m0*m3*cos(qr2) + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) - Lc0*Lc2*m0*m2*cos(qr2) - 2*Lc2*Lc3*m2*m3*cos(qr3) + L2*Lc1*m1*m3*cos(qr1 - qr2) + Lc1*Lc2*m1*m2*cos(qr1 - qr2))/(m0 + m1 + m2 + m3),                                                                                 (Lc1*m1*(L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                                                              (I2*m0 + I2*m1 + I2*m2 + I2*m3 + L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc2^2*m0*m2 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L2*Lc2*m2*m3 + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) - 2*Lc2*Lc3*m2*m3*cos(qr3))/(m0 + m1 + m2 + m3),                                                                                                      (Lc3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3);
c3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + Lc1*m1*cos(qr2 - qr1 + qr3) + L0*m0*cos(qr2 + qr3) + L0*m1*cos(qr2 + qr3) - Lc0*m0*cos(qr2 + qr3) + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                  (Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3))/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          (Lc3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                     (I3*m0 + I3*m1 + I3*m2 + I3*m3 + Lc3^2*m0*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3)/(m0 + m1 + m2 + m3)];
 
CR =[ -(L0*L2*dqr2*m0*m3*sin(qr2) + L0*L2*dqr2*m1*m3*sin(qr2) + L0*Lc1*dqr1*m1*m2*sin(qr1) + L0*Lc1*dqr1*m1*m3*sin(qr1) + L0*Lc2*dqr2*m0*m2*sin(qr2) + L0*Lc2*dqr2*m1*m2*sin(qr2) - L2*Lc0*dqr2*m0*m3*sin(qr2) + L2*Lc3*dqr3*m0*m3*sin(qr3) + L2*Lc3*dqr3*m1*m3*sin(qr3) + L2*Lc3*dqr3*m2*m3*sin(qr3) + Lc0*Lc1*dqr1*m0*m1*sin(qr1) - Lc0*Lc2*dqr2*m0*m2*sin(qr2) - Lc2*Lc3*dqr3*m2*m3*sin(qr3) + L2*Lc1*dqr1*m1*m3*sin(qr1 - qr2) - L2*Lc1*dqr2*m1*m3*sin(qr1 - qr2) + Lc1*Lc2*dqr1*m1*m2*sin(qr1 - qr2) - Lc1*Lc2*dqr2*m1*m2*sin(qr1 - qr2) - Lc1*Lc3*dqr1*m1*m3*sin(qr2 - qr1 + qr3) + Lc1*Lc3*dqr2*m1*m3*sin(qr2 - qr1 + qr3) + Lc1*Lc3*dqr3*m1*m3*sin(qr2 - qr1 + qr3) + L0*Lc3*dqr2*m0*m3*sin(qr2 + qr3) + L0*Lc3*dqr2*m1*m3*sin(qr2 + qr3) + L0*Lc3*dqr3*m0*m3*sin(qr2 + qr3) + L0*Lc3*dqr3*m1*m3*sin(qr2 + qr3) - Lc0*Lc3*dqr2*m0*m3*sin(qr2 + qr3) - Lc0*Lc3*dqr3*m0*m3*sin(qr2 + qr3))/(m0 + m1 + m2 + m3), -(Lc1*m1*(dq0 - dqr1)*(L2*m3*sin(qr1 - qr2) + Lc2*m2*sin(qr1 - qr2) - Lc3*m3*sin(qr2 - qr1 + qr3) + L0*m2*sin(qr1) + L0*m3*sin(qr1) + Lc0*m0*sin(qr1)))/(m0 + m1 + m2 + m3), (L0*L2*dqr2*m0*m3*sin(qr2) - L0*L2*dq0*m1*m3*sin(qr2) - L0*L2*dq0*m0*m3*sin(qr2) + L0*L2*dqr2*m1*m3*sin(qr2) - L0*Lc2*dq0*m0*m2*sin(qr2) - L0*Lc2*dq0*m1*m2*sin(qr2) + L2*Lc0*dq0*m0*m3*sin(qr2) + L0*Lc2*dqr2*m0*m2*sin(qr2) + L0*Lc2*dqr2*m1*m2*sin(qr2) - L2*Lc0*dqr2*m0*m3*sin(qr2) + L2*Lc3*dqr3*m0*m3*sin(qr3) + L2*Lc3*dqr3*m1*m3*sin(qr3) + L2*Lc3*dqr3*m2*m3*sin(qr3) + Lc0*Lc2*dq0*m0*m2*sin(qr2) - Lc0*Lc2*dqr2*m0*m2*sin(qr2) - Lc2*Lc3*dqr3*m2*m3*sin(qr3) + L2*Lc1*dq0*m1*m3*sin(qr1 - qr2) - L2*Lc1*dqr2*m1*m3*sin(qr1 - qr2) + Lc1*Lc2*dq0*m1*m2*sin(qr1 - qr2) - Lc1*Lc2*dqr2*m1*m2*sin(qr1 - qr2) - Lc1*Lc3*dq0*m1*m3*sin(qr2 - qr1 + qr3) + Lc1*Lc3*dqr2*m1*m3*sin(qr2 - qr1 + qr3) + Lc1*Lc3*dqr3*m1*m3*sin(qr2 - qr1 + qr3) - L0*Lc3*dq0*m0*m3*sin(qr2 + qr3) - L0*Lc3*dq0*m1*m3*sin(qr2 + qr3) + L0*Lc3*dqr2*m0*m3*sin(qr2 + qr3) + L0*Lc3*dqr2*m1*m3*sin(qr2 + qr3) + L0*Lc3*dqr3*m0*m3*sin(qr2 + qr3) + L0*Lc3*dqr3*m1*m3*sin(qr2 + qr3) + Lc0*Lc3*dq0*m0*m3*sin(qr2 + qr3) - Lc0*Lc3*dqr2*m0*m3*sin(qr2 + qr3) - Lc0*Lc3*dqr3*m0*m3*sin(qr2 + qr3))/(m0 + m1 + m2 + m3), Lc3*m3*(L0*sin(qr2 + qr3) - Lc0*sin(qr2 + qr3) + L2*sin(qr3))*(dqr2 - dq0 + dqr3) - (Lc3*m3*sin(qr2 - q0 + qr3)*(m3*(Lc3*cos(qr2 - q0 + qr3) + cos(q0)*(L0 - Lc0) + Lc2*cos(q0 - qr2) + cos(q0 - qr2)*(L2 - Lc2)) - m1*(Lc0*cos(q0) + Lc1*cos(q0 - qr1)) + m2*(cos(q0)*(L0 - Lc0) + Lc2*cos(q0 - qr2)))*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3) - (Lc3*m3*cos(qr2 - q0 + qr3)*(m3*(sin(q0)*(L0 - Lc0) - Lc3*sin(qr2 - q0 + qr3) + Lc2*sin(q0 - qr2) + sin(q0 - qr2)*(L2 - Lc2)) - m1*(Lc0*sin(q0) + Lc1*sin(q0 - qr1)) + m2*(sin(q0)*(L0 - Lc0) + Lc2*sin(q0 - qr2)))*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3);
c1*m1*(Lc3*dqr2*m3*sin(qr2 - qr1 + qr3) - Lc3*dq0*m3*sin(qr2 - qr1 + qr3) + Lc3*dqr3*m3*sin(qr2 - qr1 + qr3) + L0*dq0*m2*sin(qr1) + L0*dq0*m3*sin(qr1) + Lc0*dq0*m0*sin(qr1) + L2*dq0*m3*sin(qr1 - qr2) - L2*dqr2*m3*sin(qr1 - qr2) + Lc2*dq0*m2*sin(qr1 - qr2) - Lc2*dqr2*m2*sin(qr1 - qr2)))/(m0 + m1 + m2 + mc1*m1*(Lc3*dqr2*m3*sin(qr2 - qr1 + qr3) - Lc3*dq0*m3*sin(qr2 - qr1 + qr3) + Lc3*dqr3*m3*sin(qr2 - qr1 + qr3) + L2*dq0*m3*sin(qr1 - qr2) - L2*dqr2*m3*sin(qr1 - qr2) + Lc2*dq0*m2*sin(qr1 - qr2) - Lc2*dqr2*m2*sin(qr1 - qr2)))/(m0 + m1 + m2 + mc1*Lc3*m1*m3*sin(qr2 - qr1 + qr3)*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3);
                                                                                                                                                                                                                                                          (L0*L2*dq0*m0*m3*sin(qr2) + L0*L2*dq0*m1*m3*sin(qr2) + L0*Lc2*dq0*m0*m2*sin(qr2) + L0*Lc2*dq0*m1*m2*sin(qr2) - L2*Lc0*dq0*m0*m3*sin(qr2) + L2*Lc3*dqr3*m0*m3*sin(qr3) + L2*Lc3*dqr3*m1*m3*sin(qr3) + L2*Lc3*dqr3*m2*m3*sin(qr3) - Lc0*Lc2*dq0*m0*m2*sin(qr2) - Lc2*Lc3*dqr3*m2*m3*sin(qr3) - L2*Lc1*dq0*m1*m3*sin(qr1 - qr2) + L2*Lc1*dqr1*m1*m3*sin(qr1 - qr2) - Lc1*Lc2*dq0*m1*m2*sin(qr1 - qr2) + Lc1*Lc2*dqr1*m1*m2*sin(qr1 - qr2) + Lc1*Lc3*dq0*m1*m3*sin(qr2 - qr1 + qr3) - Lc1*Lc3*dqr1*m1*m3*sin(qr2 - qr1 + qr3) + L0*Lc3*dq0*m0*m3*sin(qr2 + qr3) + L0*Lc3*dq0*m1*m3*sin(qr2 + qr3) - Lc0*Lc3*dq0*m0*m3*sin(qr2 + qr3))/(m0 + m1 + m2 + m3),                                                      (Lc1*m1*(dq0 - dqr1)*(L2*m3*sin(qr1 - qr2) + Lc2*m2*sin(qr1 - qr2) - Lc3*m3*sin(qr2 - qr1 + qr3)))/(m0 + m1 + m2 + mc3*dqr3*m3*sin(qr3)*(L2*m0 + L2*m1 + L2*m2 - Lc2*m2))/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                        (Lc3*m3*sin(qr2 - q0 + qr3)*(L2*m3*cos(q0 - qr2) + Lc2*m2*cos(q0 - qr2) + Lc3*m3*cos(qr2 - q0 + qr3))*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3) - L2*Lc3*m3*sin(qr3)*(dqr2 - dq0 + dqr3) + (Lc3*m3*cos(qr2 - q0 + qr3)*(L2*m3*sin(q0 - qr2) + Lc2*m2*sin(q0 - qr2) - Lc3*m3*sin(qr2 - q0 + qr3))*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3);
c3*m3*(Lc1*dq0*m1*sin(qr2 - qr1 + qr3) - Lc1*dqr1*m1*sin(qr2 - qr1 + qr3) + L0*dq0*m0*sin(qr2 + qr3) + L0*dq0*m1*sin(qr2 + qr3) - Lc0*dq0*m0*sin(qr2 + qr3) + L2*dq0*m0*sin(qr3) + L2*dq0*m1*sin(qr3) + L2*dq0*m2*sin(qr3) - L2*dqr2*m0*sin(qr3) - L2*dqr2*m1*sin(qr3) - L2*dqr2*m2*sin(qr3) - Lc2*dq0*m2*sin(qr3) + Lc2*dqr2*m2*sin(qr3)))/(m0 + m1 + m2 + m3),                                                                                                      -(Lc1*Lc3*m1*m3*sin(qr2 - qr1 + qr3)*(dq0 - dqr1))/(m0 + m1 + m2 + mc3*m3*sin(qr3)*(dq0 - dqr2)*(L2*m0 + L2*m1 + L2*m2 - Lc2*m2))/(m0 + m1 + m2 + m
 

     

q0d=desire(1);qr1d=desire(2);qr2d=desire(3);qr3d=desire(4);
% q0d=6*pi/12; q2d=pi/3; q3d=8*pi/18;
if t<=0.16
    a=MR^(-1)*CR*[dq0;dqr1;dqr2;dqr3];
    u=[-c(2)*dqr1-k(2)*(qr1-qr1d);-c(3)*dqr2-k(3)*(qr2-qr2d);-c(4)*dqr3-k(4)*(qr3-qr3d)];
    b=[a(2,:);a(3,:);a(4,:)]+u;
    c=MR^(-1); d=c(2:4,2:4);
    T=d^(-1)*b;
else
    if(0.16<t && t<=0.24)
        a=MR^(-1)*CR*[dq0;dqr1;dqr2;dqr3];
        u=[-2*sqrt(kk(2))*x(6)+kk(2)*(desire(2)+side-x(2));-2*sqrt(kk(3))*x(7)+kk(3)*(desire(3)-side-x(3));-c(4)*dqr3-k(4)*(qr3-qr3d)];
        b=[a(2,:);a(3,:);a(4,:)]+u;
        c=MR^(-1); d=c(2:4,2:4);
        T=d^(-1)*b;
    elseif(0.24<t && t<=0.32)
        a=MR^(-1)*CR*[dq0;dqr1;dqr2;dqr3];
        u=[-2*sqrt(kk(2))*x(6)+kk(2)*(desire(2)-x(2));0;0];
        b=[a(2,:);a(3,:);a(4,:)]+u;
        c=MR^(-1); d=c(2:4,2:4);
        T=d^(-1)*b;
    elseif(0.32<t && t<=0.4)  
        a=MR^(-1)*CR*[dq0;dqr1;dqr2;dqr3];
        u=[0;-2*sqrt(kk(3))*x(7)+kk(3)*(desire(3)-x(3));0];
        b=[a(2,:);a(3,:);a(4,:)]+u;
        c=MR^(-1); d=c(2:4,2:4);
        T=d^(-1)*b;
    end
end

sys=[x(5);x(6);x(7);x(8);-MR^(-1)*CR*[x(5);x(6);x(7);x(8)]]+[0;0;0;0;MR^(-1)*[0;T(1);T(2);T(3)]]; 
% sys = zeros(8,1);



% end mdlDerivatives
%
%=============================================================================
% mdlOutputs
% Return the block outputs.
%=============================================================================
%
function sys=mdlOutputs(t,x,u,dgain,pgain,desire,kk,side,ini)
%%four link calculation
Lc0=0.06; Lc1=0.07; Lc2=0.04; Lc3=0.04;
L0=0.12; L1=0.14; L2=0.08; L3=0.08;
m0=0.0425; m1=0.0111; m2=0.01955; m3=0.0119;
I0=5.1*10^(-5); I1=1.81*10^(-5); I2=1.19*10^(-5); I3=0.63*10^(-5);
g=9.8; angmom=0; su0=0; su1=0; su2=0; su3=0;
%PID gain
c=dgain;k=pgain;
%%MODEL
q0=x(1);qr1=x(2);qr2=x(3);qr3=x(4);dq0=x(5);dqr1=x(6);dqr2=x(7);dqr3=x(8);


MR =[ (I0*m0 + I0*m1 + I0*m2 + I0*m3 + L0^2*m0*m2 + L0^2*m0*m3 + L0^2*m1*m2 + L0^2*m1*m3 + L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc0^2*m0*m1 + Lc0^2*m0*m2 + Lc1^2*m0*m1 + Lc0^2*m0*m3 + Lc1^2*m1*m2 + Lc2^2*m0*m2 + Lc1^2*m1*m3 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L0*Lc0*m0*m2 - 2*L0*Lc0*m0*m3 - 2*L2*Lc2*m2*m3 + 2*Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3) + 2*L0*Lc3*m0*m3*cos(qr2 + qr3) + 2*L0*Lc3*m1*m3*cos(qr2 + qr3) - 2*Lc0*Lc3*m0*m3*cos(qr2 + qr3) + 2*L0*L2*m0*m3*cos(qr2) + 2*L0*L2*m1*m3*cos(qr2) + 2*L0*Lc1*m1*m2*cos(qr1) + 2*L0*Lc1*m1*m3*cos(qr1) + 2*L0*Lc2*m0*m2*cos(qr2) + 2*L0*Lc2*m1*m2*cos(qr2) - 2*L2*Lc0*m0*m3*cos(qr2) + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) + 2*Lc0*Lc1*m0*m1*cos(qr1) - 2*Lc0*Lc2*m0*m2*cos(qr2) - 2*Lc2*Lc3*m2*m3*cos(qr3) + 2*L2*Lc1*m1*m3*cos(qr1 - qr2) + 2*Lc1*Lc2*m1*m2*cos(qr1 - qr2))/(m0 + m1 + m2 + m3), -(Lc1*m1*(Lc1*m0 + Lc1*m2 + Lc1*m3 + L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3) + L0*m2*cos(qr1) + L0*m3*cos(qr1) + Lc0*m0*cos(qr1)))/(m0 + m1 + m2 + m3), -(L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc2^2*m0*m2 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L2*Lc2*m2*m3 + Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3) + L0*Lc3*m0*m3*cos(qr2 + qr3) + L0*Lc3*m1*m3*cos(qr2 + qr3) - Lc0*Lc3*m0*m3*cos(qr2 + qr3) + L0*L2*m0*m3*cos(qr2) + L0*L2*m1*m3*cos(qr2) + L0*Lc2*m0*m2*cos(qr2) + L0*Lc2*m1*m2*cos(qr2) - L2*Lc0*m0*m3*cos(qr2) + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) - Lc0*Lc2*m0*m2*cos(qr2) - 2*Lc2*Lc3*m2*m3*cos(qr3) + L2*Lc1*m1*m3*cos(qr1 - qr2) + Lc1*Lc2*m1*m2*cos(qr1 - qr2))/(m0 + m1 + m2 + m3), -(Lc3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + Lc1*m1*cos(qr2 - qr1 + qr3) + L0*m0*cos(qr2 + qr3) + L0*m1*cos(qr2 + qr3) - Lc0*m0*cos(qr2 + qr3) + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             -(Lc1*m1*(Lc1*m0 + Lc1*m2 + Lc1*m3 + L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3) + L0*m2*cos(qr1) + L0*m3*cos(qr1) + Lc0*m0*cos(qr1)))/(m0 + m1 + m2 + m3),                                                                                             (I1*m0 + I1*m1 + I1*m2 + I1*m3 + Lc1^2*m0*m1 + Lc1^2*m1*m2 + Lc1^2*m1*m3)/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             (Lc1*m1*(L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                                                          (Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3))/(m0 + m1 + m2 + m3);
                                                                                                                                                                                                                                                                                                                 -(L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc2^2*m0*m2 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L2*Lc2*m2*m3 + Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3) + L0*Lc3*m0*m3*cos(qr2 + qr3) + L0*Lc3*m1*m3*cos(qr2 + qr3) - Lc0*Lc3*m0*m3*cos(qr2 + qr3) + L0*L2*m0*m3*cos(qr2) + L0*L2*m1*m3*cos(qr2) + L0*Lc2*m0*m2*cos(qr2) + L0*Lc2*m1*m2*cos(qr2) - L2*Lc0*m0*m3*cos(qr2) + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) - Lc0*Lc2*m0*m2*cos(qr2) - 2*Lc2*Lc3*m2*m3*cos(qr3) + L2*Lc1*m1*m3*cos(qr1 - qr2) + Lc1*Lc2*m1*m2*cos(qr1 - qr2))/(m0 + m1 + m2 + m3),                                                                                 (Lc1*m1*(L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                                                              (I2*m0 + I2*m1 + I2*m2 + I2*m3 + L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc2^2*m0*m2 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L2*Lc2*m2*m3 + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) - 2*Lc2*Lc3*m2*m3*cos(qr3))/(m0 + m1 + m2 + m3),                                                                                                      (Lc3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3);
c3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + Lc1*m1*cos(qr2 - qr1 + qr3) + L0*m0*cos(qr2 + qr3) + L0*m1*cos(qr2 + qr3) - Lc0*m0*cos(qr2 + qr3) + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                  (Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3))/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          (Lc3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                     (I3*m0 + I3*m1 + I3*m2 + I3*m3 + Lc3^2*m0*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3)/(m0 + m1 + m2 + m3)];
 
CR =[ -(L0*L2*dqr2*m0*m3*sin(qr2) + L0*L2*dqr2*m1*m3*sin(qr2) + L0*Lc1*dqr1*m1*m2*sin(qr1) + L0*Lc1*dqr1*m1*m3*sin(qr1) + L0*Lc2*dqr2*m0*m2*sin(qr2) + L0*Lc2*dqr2*m1*m2*sin(qr2) - L2*Lc0*dqr2*m0*m3*sin(qr2) + L2*Lc3*dqr3*m0*m3*sin(qr3) + L2*Lc3*dqr3*m1*m3*sin(qr3) + L2*Lc3*dqr3*m2*m3*sin(qr3) + Lc0*Lc1*dqr1*m0*m1*sin(qr1) - Lc0*Lc2*dqr2*m0*m2*sin(qr2) - Lc2*Lc3*dqr3*m2*m3*sin(qr3) + L2*Lc1*dqr1*m1*m3*sin(qr1 - qr2) - L2*Lc1*dqr2*m1*m3*sin(qr1 - qr2) + Lc1*Lc2*dqr1*m1*m2*sin(qr1 - qr2) - Lc1*Lc2*dqr2*m1*m2*sin(qr1 - qr2) - Lc1*Lc3*dqr1*m1*m3*sin(qr2 - qr1 + qr3) + Lc1*Lc3*dqr2*m1*m3*sin(qr2 - qr1 + qr3) + Lc1*Lc3*dqr3*m1*m3*sin(qr2 - qr1 + qr3) + L0*Lc3*dqr2*m0*m3*sin(qr2 + qr3) + L0*Lc3*dqr2*m1*m3*sin(qr2 + qr3) + L0*Lc3*dqr3*m0*m3*sin(qr2 + qr3) + L0*Lc3*dqr3*m1*m3*sin(qr2 + qr3) - Lc0*Lc3*dqr2*m0*m3*sin(qr2 + qr3) - Lc0*Lc3*dqr3*m0*m3*sin(qr2 + qr3))/(m0 + m1 + m2 + m3), -(Lc1*m1*(dq0 - dqr1)*(L2*m3*sin(qr1 - qr2) + Lc2*m2*sin(qr1 - qr2) - Lc3*m3*sin(qr2 - qr1 + qr3) + L0*m2*sin(qr1) + L0*m3*sin(qr1) + Lc0*m0*sin(qr1)))/(m0 + m1 + m2 + m3), (L0*L2*dqr2*m0*m3*sin(qr2) - L0*L2*dq0*m1*m3*sin(qr2) - L0*L2*dq0*m0*m3*sin(qr2) + L0*L2*dqr2*m1*m3*sin(qr2) - L0*Lc2*dq0*m0*m2*sin(qr2) - L0*Lc2*dq0*m1*m2*sin(qr2) + L2*Lc0*dq0*m0*m3*sin(qr2) + L0*Lc2*dqr2*m0*m2*sin(qr2) + L0*Lc2*dqr2*m1*m2*sin(qr2) - L2*Lc0*dqr2*m0*m3*sin(qr2) + L2*Lc3*dqr3*m0*m3*sin(qr3) + L2*Lc3*dqr3*m1*m3*sin(qr3) + L2*Lc3*dqr3*m2*m3*sin(qr3) + Lc0*Lc2*dq0*m0*m2*sin(qr2) - Lc0*Lc2*dqr2*m0*m2*sin(qr2) - Lc2*Lc3*dqr3*m2*m3*sin(qr3) + L2*Lc1*dq0*m1*m3*sin(qr1 - qr2) - L2*Lc1*dqr2*m1*m3*sin(qr1 - qr2) + Lc1*Lc2*dq0*m1*m2*sin(qr1 - qr2) - Lc1*Lc2*dqr2*m1*m2*sin(qr1 - qr2) - Lc1*Lc3*dq0*m1*m3*sin(qr2 - qr1 + qr3) + Lc1*Lc3*dqr2*m1*m3*sin(qr2 - qr1 + qr3) + Lc1*Lc3*dqr3*m1*m3*sin(qr2 - qr1 + qr3) - L0*Lc3*dq0*m0*m3*sin(qr2 + qr3) - L0*Lc3*dq0*m1*m3*sin(qr2 + qr3) + L0*Lc3*dqr2*m0*m3*sin(qr2 + qr3) + L0*Lc3*dqr2*m1*m3*sin(qr2 + qr3) + L0*Lc3*dqr3*m0*m3*sin(qr2 + qr3) + L0*Lc3*dqr3*m1*m3*sin(qr2 + qr3) + Lc0*Lc3*dq0*m0*m3*sin(qr2 + qr3) - Lc0*Lc3*dqr2*m0*m3*sin(qr2 + qr3) - Lc0*Lc3*dqr3*m0*m3*sin(qr2 + qr3))/(m0 + m1 + m2 + m3), Lc3*m3*(L0*sin(qr2 + qr3) - Lc0*sin(qr2 + qr3) + L2*sin(qr3))*(dqr2 - dq0 + dqr3) - (Lc3*m3*sin(qr2 - q0 + qr3)*(m3*(Lc3*cos(qr2 - q0 + qr3) + cos(q0)*(L0 - Lc0) + Lc2*cos(q0 - qr2) + cos(q0 - qr2)*(L2 - Lc2)) - m1*(Lc0*cos(q0) + Lc1*cos(q0 - qr1)) + m2*(cos(q0)*(L0 - Lc0) + Lc2*cos(q0 - qr2)))*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3) - (Lc3*m3*cos(qr2 - q0 + qr3)*(m3*(sin(q0)*(L0 - Lc0) - Lc3*sin(qr2 - q0 + qr3) + Lc2*sin(q0 - qr2) + sin(q0 - qr2)*(L2 - Lc2)) - m1*(Lc0*sin(q0) + Lc1*sin(q0 - qr1)) + m2*(sin(q0)*(L0 - Lc0) + Lc2*sin(q0 - qr2)))*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3);
c1*m1*(Lc3*dqr2*m3*sin(qr2 - qr1 + qr3) - Lc3*dq0*m3*sin(qr2 - qr1 + qr3) + Lc3*dqr3*m3*sin(qr2 - qr1 + qr3) + L0*dq0*m2*sin(qr1) + L0*dq0*m3*sin(qr1) + Lc0*dq0*m0*sin(qr1) + L2*dq0*m3*sin(qr1 - qr2) - L2*dqr2*m3*sin(qr1 - qr2) + Lc2*dq0*m2*sin(qr1 - qr2) - Lc2*dqr2*m2*sin(qr1 - qr2)))/(m0 + m1 + m2 + mc1*m1*(Lc3*dqr2*m3*sin(qr2 - qr1 + qr3) - Lc3*dq0*m3*sin(qr2 - qr1 + qr3) + Lc3*dqr3*m3*sin(qr2 - qr1 + qr3) + L2*dq0*m3*sin(qr1 - qr2) - L2*dqr2*m3*sin(qr1 - qr2) + Lc2*dq0*m2*sin(qr1 - qr2) - Lc2*dqr2*m2*sin(qr1 - qr2)))/(m0 + m1 + m2 + mc1*Lc3*m1*m3*sin(qr2 - qr1 + qr3)*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3);
                                                                                                                                                                                                                                                          (L0*L2*dq0*m0*m3*sin(qr2) + L0*L2*dq0*m1*m3*sin(qr2) + L0*Lc2*dq0*m0*m2*sin(qr2) + L0*Lc2*dq0*m1*m2*sin(qr2) - L2*Lc0*dq0*m0*m3*sin(qr2) + L2*Lc3*dqr3*m0*m3*sin(qr3) + L2*Lc3*dqr3*m1*m3*sin(qr3) + L2*Lc3*dqr3*m2*m3*sin(qr3) - Lc0*Lc2*dq0*m0*m2*sin(qr2) - Lc2*Lc3*dqr3*m2*m3*sin(qr3) - L2*Lc1*dq0*m1*m3*sin(qr1 - qr2) + L2*Lc1*dqr1*m1*m3*sin(qr1 - qr2) - Lc1*Lc2*dq0*m1*m2*sin(qr1 - qr2) + Lc1*Lc2*dqr1*m1*m2*sin(qr1 - qr2) + Lc1*Lc3*dq0*m1*m3*sin(qr2 - qr1 + qr3) - Lc1*Lc3*dqr1*m1*m3*sin(qr2 - qr1 + qr3) + L0*Lc3*dq0*m0*m3*sin(qr2 + qr3) + L0*Lc3*dq0*m1*m3*sin(qr2 + qr3) - Lc0*Lc3*dq0*m0*m3*sin(qr2 + qr3))/(m0 + m1 + m2 + m3),                                                      (Lc1*m1*(dq0 - dqr1)*(L2*m3*sin(qr1 - qr2) + Lc2*m2*sin(qr1 - qr2) - Lc3*m3*sin(qr2 - qr1 + qr3)))/(m0 + m1 + m2 + mc3*dqr3*m3*sin(qr3)*(L2*m0 + L2*m1 + L2*m2 - Lc2*m2))/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                        (Lc3*m3*sin(qr2 - q0 + qr3)*(L2*m3*cos(q0 - qr2) + Lc2*m2*cos(q0 - qr2) + Lc3*m3*cos(qr2 - q0 + qr3))*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3) - L2*Lc3*m3*sin(qr3)*(dqr2 - dq0 + dqr3) + (Lc3*m3*cos(qr2 - q0 + qr3)*(L2*m3*sin(q0 - qr2) + Lc2*m2*sin(q0 - qr2) - Lc3*m3*sin(qr2 - q0 + qr3))*(dqr2 - dq0 + dqr3))/(m0 + m1 + m2 + m3);
c3*m3*(Lc1*dq0*m1*sin(qr2 - qr1 + qr3) - Lc1*dqr1*m1*sin(qr2 - qr1 + qr3) + L0*dq0*m0*sin(qr2 + qr3) + L0*dq0*m1*sin(qr2 + qr3) - Lc0*dq0*m0*sin(qr2 + qr3) + L2*dq0*m0*sin(qr3) + L2*dq0*m1*sin(qr3) + L2*dq0*m2*sin(qr3) - L2*dqr2*m0*sin(qr3) - L2*dqr2*m1*sin(qr3) - L2*dqr2*m2*sin(qr3) - Lc2*dq0*m2*sin(qr3) + Lc2*dqr2*m2*sin(qr3)))/(m0 + m1 + m2 + m3),                                                                                                      -(Lc1*Lc3*m1*m3*sin(qr2 - qr1 + qr3)*(dq0 - dqr1))/(m0 + m1 + m2 + mc3*m3*sin(qr3)*(dq0 - dqr2)*(L2*m0 + L2*m1 + L2*m2 - Lc2*m2))/(m0 + m1 + m2 + m
 

  
q0d=desire(1);qr1d=desire(2);qr2d=desire(3);qr3d=desire(4);

% q0d=6*pi/12; q2d=pi/3; q3d=8*pi/18;
% abs(x(2)-desire(2))>0.05*abs(desire(2)) || abs(x(3)-desire(3))>0.05*abs(desire(3)) || abs(x(4)-desire(4))>0.05*abs(desire(4))
if t<=0.16
    a=MR^(-1)*CR*[dq0;dqr1;dqr2;dqr3];
    u=[-c(2)*dqr1-k(2)*(qr1-qr1d);-c(3)*dqr2-k(3)*(qr2-qr2d);-c(4)*dqr3-k(4)*(qr3-qr3d)];
    b=[a(2,:);a(3,:);a(4,:)]+u;
    c=MR^(-1); d=c(2:4,2:4);
    T=d^(-1)*b;
else
    if(0.16<t && t<=0.24)
        a=MR^(-1)*CR*[dq0;dqr1;dqr2;dqr3];
        u=[-2*sqrt(kk(2))*x(6)+kk(2)*(desire(2)+side-x(2));-2*sqrt(kk(3))*x(7)+kk(3)*(desire(3)-side-x(3));-c(4)*dqr3-k(4)*(qr3-qr3d)];
        b=[a(2,:);a(3,:);a(4,:)]+u;
        c=MR^(-1); d=c(2:4,2:4);
        T=d^(-1)*b;
    elseif(0.24<t && t<=0.32)
        a=MR^(-1)*CR*[dq0;dqr1;dqr2;dqr3];
        u=[-2*sqrt(kk(2))*x(6)+kk(2)*(desire(2)-x(2));0;0];
        b=[a(2,:);a(3,:);a(4,:)]+u;
        c=MR^(-1); d=c(2:4,2:4);
        T=d^(-1)*b;
    elseif(0.32<t && t<=0.4)  
        a=MR^(-1)*CR*[dq0;dqr1;dqr2;dqr3];
        u=[0;-2*sqrt(kk(3))*x(7)+kk(3)*(desire(3)-x(3));0];
        b=[a(2,:);a(3,:);a(4,:)]+u;
        c=MR^(-1); d=c(2:4,2:4);
        T=d^(-1)*b;
    end
end
angmom=MR(1,1:4)*[x(5);x(6);x(7);x(8)];

sys=[x(1);x(2);x(3);x(4);x(5);x(6);x(7);x(8);T(1);T(2);T(3);angmom;su1;su2;su3];


% end mdlOutputs
