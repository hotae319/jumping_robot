%%four link calculation
tic
Lc0=0.06; Lc1=0.07; Lc2=0.04; Lc3=0.04;
L0=0.12; L1=0.14; L2=0.08; L3=0.08;
m0=0.0425; m1=0.0111; m2=0.01955; m3=0.0119;
I0=5.1*10^(-5); I1=1.81*10^(-5); I2=1.19*10^(-5); I3=0.63*10^(-5);

g=9.8; 

syms vxcm vycm q0 qr1 qr2 qr3  dq0 dqr1 dqr2 dqr3 T1 T2 T3 T4;
q=[q0;qr1;qr2;qr3]; dq=[dq0;dqr1;dqr2;dqr3];
p0=[L3*cos(q0-qr2-qr3)+L2*cos(q0-qr2)+(L0-Lc0)*cos(q0);L3*sin(q0-qr2-qr3)+L2*sin(q0-qr2)+(L0-Lc0)*sin(q0)]; 
p1=[L3*cos(q0-qr2-qr3)+L2*cos(q0-qr2)+L0*cos(q0)+Lc1*cos(q0-qr1);L3*sin(q0-qr2-qr3)+L2*sin(q0-qr2)+L0*sin(q0)+Lc1*sin(q0-qr1)];
p2=[L3*cos(q0-qr2-qr3)+(L2-Lc2)*cos(q0-qr2);L3*sin(q0-qr2-qr3)+(L2-Lc2)*sin(q0-qr2)];
p3=[(L3-Lc3)*cos(q0-qr2-qr3);(L3-Lc3)*sin(q0-qr2-qr3)];
%%MODEL

D =[ I0 + L0^2*m0 + L0^2*m1 + L2^2*m0 + L2^2*m1 + L3^2*m0 + L2^2*m2 + L3^2*m1 + L3^2*m2 + L3^2*m3 + Lc0^2*m0 + Lc1^2*m1 + Lc2^2*m2 + Lc3^2*m3 - 2*L0*Lc0*m0 - 2*L2*Lc2*m2 - 2*L3*Lc3*m3 + 2*L0*L3*m0*cos(qr2 + qr3) + 2*L0*L3*m1*cos(qr2 + qr3) - 2*L3*Lc0*m0*cos(qr2 + qr3) + 2*L0*L2*m0*cos(qr2) + 2*L0*L2*m1*cos(qr2) + 2*L2*L3*m0*cos(qr3) + 2*L2*L3*m1*cos(qr3) + 2*L2*L3*m2*cos(qr3) + 2*L0*Lc1*m1*cos(qr1) - 2*L2*Lc0*m0*cos(qr2) - 2*L3*Lc2*m2*cos(qr3) + 2*L2*Lc1*m1*cos(qr1 - qr2) + 2*L3*Lc1*m1*cos(qr2 - qr1 + qr3), -Lc1*m1*(Lc1 + L3*cos(qr2 - qr1 + qr3) + L0*cos(qr1) + L2*cos(qr1 - qr2)), 2*L2*Lc2*m2 - L2^2*m1 - L3^2*m0 - L2^2*m2 - L3^2*m1 - L3^2*m2 - L3^2*m3 - Lc2^2*m2 - Lc3^2*m3 - L2^2*m0 + 2*L3*Lc3*m3 - L0*L3*m0*cos(qr2 + qr3) - L0*L3*m1*cos(qr2 + qr3) + L3*Lc0*m0*cos(qr2 + qr3) - L0*L2*m0*cos(qr2) - L0*L2*m1*cos(qr2) - 2*L2*L3*m0*cos(qr3) - 2*L2*L3*m1*cos(qr3) - 2*L2*L3*m2*cos(qr3) + L2*Lc0*m0*cos(qr2) + 2*L3*Lc2*m2*cos(qr3) - L2*Lc1*m1*cos(qr1 - qr2) - L3*Lc1*m1*cos(qr2 - qr1 + qr3), 2*L3*Lc3*m3 - L3^2*m1 - L3^2*m2 - L3^2*m3 - Lc3^2*m3 - L3^2*m0 - L0*L3*m0*cos(qr2 + qr3) - L0*L3*m1*cos(qr2 + qr3) + L3*Lc0*m0*cos(qr2 + qr3) - L2*L3*m0*cos(qr3) - L2*L3*m1*cos(qr3) - L2*L3*m2*cos(qr3) + L3*Lc2*m2*cos(qr3) - L3*Lc1*m1*cos(qr2 - qr1 + qr3);
                                                                                                                                                                                                                                                                                                                                                                                                                                                  -Lc1*m1*(Lc1 + L3*cos(qr2 - qr1 + qr3) + L0*cos(qr1) + L2*cos(qr1 - qr2)),                                                             m1*Lc1^2 + I1,                                                                                                                                                                                                                                                                                                                                                                   Lc1*m1*(L3*cos(qr2 - qr1 + qr3) + L2*cos(qr1 - qr2)),                                                                                                                                                                                                                                  L3*Lc1*m1*cos(qr2 - qr1 + qr3);
                                                                                                     2*L2*Lc2*m2 - L2^2*m1 - L3^2*m0 - L2^2*m2 - L3^2*m1 - L3^2*m2 - L3^2*m3 - Lc2^2*m2 - Lc3^2*m3 - L2^2*m0 + 2*L3*Lc3*m3 - L0*L3*m0*cos(qr2 + qr3) - L0*L3*m1*cos(qr2 + qr3) + L3*Lc0*m0*cos(qr2 + qr3) - L0*L2*m0*cos(qr2) - L0*L2*m1*cos(qr2) - 2*L2*L3*m0*cos(qr3) - 2*L2*L3*m1*cos(qr3) - 2*L2*L3*m2*cos(qr3) + L2*Lc0*m0*cos(qr2) + 2*L3*Lc2*m2*cos(qr3) - L2*Lc1*m1*cos(qr1 - qr2) - L3*Lc1*m1*cos(qr2 - qr1 + qr3),                      Lc1*m1*(L3*cos(qr2 - qr1 + qr3) + L2*cos(qr1 - qr2)),                                                                                                                                                                                                    I2 + L2^2*m0 + L2^2*m1 + L3^2*m0 + L2^2*m2 + L3^2*m1 + L3^2*m2 + L3^2*m3 + Lc2^2*m2 + Lc3^2*m3 - 2*L2*Lc2*m2 - 2*L3*Lc3*m3 + 2*L2*L3*m0*cos(qr3) + 2*L2*L3*m1*cos(qr3) + 2*L2*L3*m2*cos(qr3) - 2*L3*Lc2*m2*cos(qr3),                                                                                                                 L3^2*m0 + L3^2*m1 + L3^2*m2 + L3^2*m3 + Lc3^2*m3 - 2*L3*Lc3*m3 + L2*L3*m0*cos(qr3) + L2*L3*m1*cos(qr3) + L2*L3*m2*cos(qr3) - L3*Lc2*m2*cos(qr3);
                                                                                                                                                                                                                                                            2*L3*Lc3*m3 - L3^2*m1 - L3^2*m2 - L3^2*m3 - Lc3^2*m3 - L3^2*m0 - L0*L3*m0*cos(qr2 + qr3) - L0*L3*m1*cos(qr2 + qr3) + L3*Lc0*m0*cos(qr2 + qr3) - L2*L3*m0*cos(qr3) - L2*L3*m1*cos(qr3) - L2*L3*m2*cos(qr3) + L3*Lc2*m2*cos(qr3) - L3*Lc1*m1*cos(qr2 - qr1 + qr3),                                            L3*Lc1*m1*cos(qr2 - qr1 + qr3),                                                                                                                                                                                                                                                                        L3^2*m0 + L3^2*m1 + L3^2*m2 + L3^2*m3 + Lc3^2*m3 - 2*L3*Lc3*m3 + L2*L3*m0*cos(qr3) + L2*L3*m1*cos(qr3) + L2*L3*m2*cos(qr3) - L3*Lc2*m2*cos(qr3),                                                                                                                                                                                             I3 + L3^2*m0 + L3^2*m1 + L3^2*m2 + L3^2*m3 + Lc3^2*m3 - 2*L3*Lc3*m3];
 
 
C =[ - dqr2*(L0*L3*m0*sin(qr2 + qr3) + L0*L3*m1*sin(qr2 + qr3) - L3*Lc0*m0*sin(qr2 + qr3) + L0*L2*m0*sin(qr2) + L0*L2*m1*sin(qr2) - L2*Lc0*m0*sin(qr2) - L2*Lc1*m1*sin(qr1 - qr2) + L3*Lc1*m1*sin(qr2 - qr1 + qr3)) - L3*dqr3*(Lc1*m1*sin(qr2 - qr1 + qr3) + L0*m0*sin(qr2 + qr3) + L0*m1*sin(qr2 + qr3) - Lc0*m0*sin(qr2 + qr3) + L2*m0*sin(qr3) + L2*m1*sin(qr3) + L2*m2*sin(qr3) - Lc2*m2*sin(qr3)) - Lc1*dqr1*m1*(L0*sin(qr1) - L3*sin(qr2 - qr1 + qr3) + L2*sin(qr1 - qr2)), -Lc1*m1*(dq0 - dqr1)*(L0*sin(qr1) - L3*sin(qr2 - qr1 + qr3) + L2*sin(qr1 - qr2)), L3*Lc1*dqr2*m1*sin(qr2 - qr1 + qr3) - L3*Lc1*dq0*m1*sin(qr2 - qr1 + qr3) + L3*Lc1*dqr3*m1*sin(qr2 - qr1 + qr3) - L0*L3*dq0*m0*sin(qr2 + qr3) - L0*L3*dq0*m1*sin(qr2 + qr3) + L0*L3*dqr2*m0*sin(qr2 + qr3) + L0*L3*dqr2*m1*sin(qr2 + qr3) + L0*L3*dqr3*m0*sin(qr2 + qr3) + L0*L3*dqr3*m1*sin(qr2 + qr3) + L3*Lc0*dq0*m0*sin(qr2 + qr3) - L3*Lc0*dqr2*m0*sin(qr2 + qr3) - L3*Lc0*dqr3*m0*sin(qr2 + qr3) - L0*L2*dq0*m0*sin(qr2) - L0*L2*dq0*m1*sin(qr2) + L0*L2*dqr2*m0*sin(qr2) + L0*L2*dqr2*m1*sin(qr2) + L2*L3*dqr3*m0*sin(qr3) + L2*L3*dqr3*m1*sin(qr3) + L2*L3*dqr3*m2*sin(qr3) + L2*Lc0*dq0*m0*sin(qr2) - L2*Lc0*dqr2*m0*sin(qr2) - L3*Lc2*dqr3*m2*sin(qr3) + L2*Lc1*dq0*m1*sin(qr1 - qr2) - L2*Lc1*dqr2*m1*sin(qr1 - qr2), L3*(dqr2 - dq0 + dqr3)*(Lc1*m1*sin(qr2 - qr1 + qr3) + L0*m0*sin(qr2 + qr3) + L0*m1*sin(qr2 + qr3) - Lc0*m0*sin(qr2 + qr3) + L2*m0*sin(qr3) + L2*m1*sin(qr3) + L2*m2*sin(qr3) - Lc2*m2*sin(qr3));
                                                                                                                                                                                                                                                                                                       Lc1*m1*(L2*dq0*sin(qr1 - qr2) - L2*dqr2*sin(qr1 - qr2) - L3*dq0*sin(qr2 - qr1 + qr3) + L3*dqr2*sin(qr2 - qr1 + qr3) + L3*dqr3*sin(qr2 - qr1 + qr3) + L0*dq0*sin(qrc1*m1*(L2*dq0*sin(qr1 - qr2) - L2*dqr2*sin(qr1 - qr2) - L3*dq0*sin(qr2 - qr1 + qr3) + L3*dqr2*sin(qr2 - qr1 + qr3) + L3*dqr3*sin(qr2 - qr1 + qr3)),                                                                                                                                             -L3*Lc1*m1*sin(qr2 - qr1 + qr3)*(dqr2 - dq0 + dqr3);
                                                            L3*Lc1*dq0*m1*sin(qr2 - qr1 + qr3) - L3*Lc1*dqr1*m1*sin(qr2 - qr1 + qr3) + L0*L3*dq0*m0*sin(qr2 + qr3) + L0*L3*dq0*m1*sin(qr2 + qr3) - L3*Lc0*dq0*m0*sin(qr2 + qr3) + L0*L2*dq0*m0*sin(qr2) + L0*L2*dq0*m1*sin(qr2) + L2*L3*dqr3*m0*sin(qr3) + L2*L3*dqr3*m1*sin(qr3) + L2*L3*dqr3*m2*sin(qr3) - L2*Lc0*dq0*m0*sin(qr2) - L3*Lc2*dqr3*m2*sin(qr3) - L2*Lc1*dq0*m1*sin(qr1 - qr2) + L2*Lc1*dqr1*m1*sin(qr1 - qr2),               -Lc1*m1*(L3*sin(qr2 - qr1 + qr3) - L2*sin(qr1 - qr2))*(dq0 - dqrdqr3*sin(qr3)*(L2*m0 + L2*m1 + L2*m2 - Lc2*m2),                                                                                                                               -L3*sin(qr3)*(dqr2 - dq0 + dqr3)*(L2*m0 + L2*m1 + L2*m2 - Lc2*m2);
                                                                                                                                     L3*(Lc1*dq0*m1*sin(qr2 - qr1 + qr3) - Lc1*dqr1*m1*sin(qr2 - qr1 + qr3) + L0*dq0*m0*sin(qr2 + qr3) + L0*dq0*m1*sin(qr2 + qr3) - Lc0*dq0*m0*sin(qr2 + qr3) + L2*dq0*m0*sin(qr3) + L2*dq0*m1*sin(qr3) + L2*dq0*m2*sin(qr3) - L2*dqr2*m0*sin(qr3) - L2*dqr2*m1*sin(qr3) - L2*dqr2*m2*sin(qr3) - Lc2*dq0*m2*sin(qr3) + Lc2*dqr2*m2*sin(qr3)),                                     -L3*Lc1*m1*sin(qr2 - qr1 + qr3)*(dq0 - dqrsin(qr3)*(dq0 - dqr2)*(L2*m0 + L2*m1 + L2*m2 - Lc2*m2),                                                                                                                                                                                               0];
 
 
poten =[ g*m2*(L3*cos(qr2 - q0 + qr3) + cos(q0 - qr2)*(L2 - Lc2)) + g*m1*(L3*cos(qr2 - q0 + qr3) + L0*cos(q0) + L2*cos(q0 - qr2) + Lc1*cos(q0 - qr1)) + g*m0*(L3*cos(qr2 - q0 + qr3) + cos(q0)*(L0 - Lc0) + L2*cos(q0 - qr2)) + g*m3*cos(qr2 - q0 + qr3)*(L3 - Lc3);
                                                                                                                                                                                                                                    -Lc1*g*m1*cos(q0 - qr1);
                                                     - g*m0*(L3*cos(qr2 - q0 + qr3) + L2*cos(q0 - qr2)) - g*m1*(L3*cos(qr2 - q0 + qr3) + L2*cos(q0 - qr2)) - g*m2*(L3*cos(qr2 - q0 + qr3) + cos(q0 - qr2)*(L2 - Lc2)) - g*m3*cos(qr2 - q0 + qr3)*(L3 - Lc3);
                                                                                                                                                                                            -g*cos(qr2 - q0 + qr3)*(L3*m0 + L3*m1 + L3*m2 + L3*m3 - Lc3*m3)];
 
T=[T4;-T1;T2-T4;T3-T4];
% T=subs(T,[T0,T1,T2],[0,0,0]);

ME =[ (I0*m0 + I0*m1 + I0*m2 + I0*m3 + L0^2*m0*m2 + L0^2*m0*m3 + L0^2*m1*m2 + L0^2*m1*m3 + L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc0^2*m0*m1 + Lc0^2*m0*m2 + Lc1^2*m0*m1 + Lc0^2*m0*m3 + Lc1^2*m1*m2 + Lc2^2*m0*m2 + Lc1^2*m1*m3 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L0*Lc0*m0*m2 - 2*L0*Lc0*m0*m3 - 2*L2*Lc2*m2*m3 + 2*Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3) + 2*L0*Lc3*m0*m3*cos(qr2 + qr3) + 2*L0*Lc3*m1*m3*cos(qr2 + qr3) - 2*Lc0*Lc3*m0*m3*cos(qr2 + qr3) + 2*L0*L2*m0*m3*cos(qr2) + 2*L0*L2*m1*m3*cos(qr2) + 2*L0*Lc1*m1*m2*cos(qr1) + 2*L0*Lc1*m1*m3*cos(qr1) + 2*L0*Lc2*m0*m2*cos(qr2) + 2*L0*Lc2*m1*m2*cos(qr2) - 2*L2*Lc0*m0*m3*cos(qr2) + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) + 2*Lc0*Lc1*m0*m1*cos(qr1) - 2*Lc0*Lc2*m0*m2*cos(qr2) - 2*Lc2*Lc3*m2*m3*cos(qr3) + 2*L2*Lc1*m1*m3*cos(qr1 - qr2) + 2*Lc1*Lc2*m1*m2*cos(qr1 - qr2))/(m0 + m1 + m2 + m3), -(Lc1*m1*(Lc1*m0 + Lc1*m2 + Lc1*m3 + L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3) + L0*m2*cos(qr1) + L0*m3*cos(qr1) + Lc0*m0*cos(qr1)))/(m0 + m1 + m2 + m3), -(L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc2^2*m0*m2 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L2*Lc2*m2*m3 + Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3) + L0*Lc3*m0*m3*cos(qr2 + qr3) + L0*Lc3*m1*m3*cos(qr2 + qr3) - Lc0*Lc3*m0*m3*cos(qr2 + qr3) + L0*L2*m0*m3*cos(qr2) + L0*L2*m1*m3*cos(qr2) + L0*Lc2*m0*m2*cos(qr2) + L0*Lc2*m1*m2*cos(qr2) - L2*Lc0*m0*m3*cos(qr2) + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) - Lc0*Lc2*m0*m2*cos(qr2) - 2*Lc2*Lc3*m2*m3*cos(qr3) + L2*Lc1*m1*m3*cos(qr1 - qr2) + Lc1*Lc2*m1*m2*cos(qr1 - qr2))/(m0 + m1 + m2 + m3), -(Lc3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + Lc1*m1*cos(qr2 - qr1 + qr3) + L0*m0*cos(qr2 + qr3) + L0*m1*cos(qr2 + qr3) - Lc0*m0*cos(qr2 + qr3) + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3);
c1*m1*(Lc1*m0 + Lc1*m2 + Lc1*m3 + L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3) + L0*m2*cos(qr1) + L0*m3*cos(qr1) + Lc0*m0*cos(qr1)))/(m0 + m1 + m2 + m3),                                                                                             (I1*m0 + I1*m1 + I1*m2 + I1*m3 + Lc1^2*m0*m1 + Lc1^2*m1*m2 + Lc1^2*m1*m3)/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             (Lc1*m1*(L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                                                          (Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3))/(m0 + m1 + m2 + m3);
                                                                                                                                                                                                                                                                                                                 -(L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc2^2*m0*m2 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L2*Lc2*m2*m3 + Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3) + L0*Lc3*m0*m3*cos(qr2 + qr3) + L0*Lc3*m1*m3*cos(qr2 + qr3) - Lc0*Lc3*m0*m3*cos(qr2 + qr3) + L0*L2*m0*m3*cos(qr2) + L0*L2*m1*m3*cos(qr2) + L0*Lc2*m0*m2*cos(qr2) + L0*Lc2*m1*m2*cos(qr2) - L2*Lc0*m0*m3*cos(qr2) + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) - Lc0*Lc2*m0*m2*cos(qr2) - 2*Lc2*Lc3*m2*m3*cos(qr3) + L2*Lc1*m1*m3*cos(qr1 - qr2) + Lc1*Lc2*m1*m2*cos(qr1 - qr2))/(m0 + m1 + m2 + m3),                                                                                 (Lc1*m1*(L2*m3*cos(qr1 - qr2) + Lc2*m2*cos(qr1 - qr2) + Lc3*m3*cos(qr2 - qr1 + qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                                                              (I2*m0 + I2*m1 + I2*m2 + I2*m3 + L2^2*m0*m3 + L2^2*m1*m3 + L2^2*m2*m3 + Lc2^2*m0*m2 + Lc2^2*m1*m2 + Lc3^2*m0*m3 + Lc2^2*m2*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3 - 2*L2*Lc2*m2*m3 + 2*L2*Lc3*m0*m3*cos(qr3) + 2*L2*Lc3*m1*m3*cos(qr3) + 2*L2*Lc3*m2*m3*cos(qr3) - 2*Lc2*Lc3*m2*m3*cos(qr3))/(m0 + m1 + m2 + m3),                                                                                                      (Lc3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3);
c3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + Lc1*m1*cos(qr2 - qr1 + qr3) + L0*m0*cos(qr2 + qr3) + L0*m1*cos(qr2 + qr3) - Lc0*m0*cos(qr2 + qr3) + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                  (Lc1*Lc3*m1*m3*cos(qr2 - qr1 + qr3))/(m0 + m1 + m2 + m3),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          (Lc3*m3*(Lc3*m0 + Lc3*m1 + Lc3*m2 + L2*m0*cos(qr3) + L2*m1*cos(qr3) + L2*m2*cos(qr3) - Lc2*m2*cos(qr3)))/(m0 + m1 + m2 + m3),                                                                                                                                     (I3*m0 + I3*m1 + I3*m2 + I3*m3 + Lc3^2*m0*m3 + Lc3^2*m1*m3 + Lc3^2*m2*m3)/(m0 + m1 + m2 + m3)];
 
%%STATE eq.
% x=[q0;q1;q2;dq0;dq1;dq2];
% fx=[dq0;dq1;dq2;-D^(-1)*(C*[dq0;dq1;dq2]+poten+T)];
% 
% x=double(subs(x,[q0;q1;q2;dq0;dq1;dq2],[pi/2+pi/6; 0; pi/3; 0.6;0; 1.8]));
% dx=double(subs(fx,[q0;q1;q2;dq0;dq1;dq2],[pi/2+pi/6; 0; pi/3; 0.6;0; 1.8]));
% 
% i=0;angle=zeros(151,3);
% for t=0:0.1:15
%     i=i+1;
%     angle(i,1)=x(1);
%     angle(i,2)=x(2);
%     angle(i,3)=x(3);
%     x=x+dx*0.1;
%     dx=double(subs(fx,[q0;q1;q2;dq0;dq1;dq2],[x(1);x(2);x(3);x(4);x(5);x(6)]));
% end
% t=0:0.1:15;
% figure
% plot(t,angle)
% legend('1','2','3');

%% find state after impact

fcm=(m0*p0+m1*p1+m2*p2+m3*p3)/(m0+m1+m2+m3);
dq_aft=vpa(simplify((ME+(m0+m1+m2+m3)*jacobian(fcm,q).'*jacobian(fcm,q))^(-1)*[ME (m0+m1+m2+m3)*jacobian(fcm,q).']*[dq;vxcm;vycm]))
q_aft=double(subs(q,[q0,qr1,qr2,qr3],[ScopeData.signals(1,1).values(200,1:4)]))
double(subs(dq,[dq0,dqr1,dqr2,dqr3],[ScopeData.signals(1,2).values(200,1:4)]))
a=double(subs(ME+(m0+m1+m2+m3)*jacobian(fcm,q).'*jacobian(fcm,q),[q0,qr1,qr2,qr3,dq0,dqr1,dqr2,dqr3],[ScopeData.signals(1,1).values(200,1:4),ScopeData.signals(1,2).values(200,1:4)]));
b=double(subs([ME (m0+m1+m2+m3)*jacobian(fcm,q).'],[q0,qr1,qr2,qr3,dq0,dqr1,dqr2,dqr3],[ScopeData.signals(1,1).values(200,1:4),ScopeData.signals(1,2).values(200,1:4)]));
a^(-1)*b
%select vxcm, vycm
dq_aft=double(subs(dq_aft,[q0,qr1,qr2,qr3,dq0,dqr1,dqr2,dqr3,vxcm,vycm],[ScopeData.signals(1,1).values(200,1:4),ScopeData.signals(1,2).values(200,1:4),-1,-2]))
toc